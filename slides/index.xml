<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Slides on Sphinxxx1984 Blog</title>
    <link>https://sphinxxx1984.github.io/slides/</link>
    <description>Recent content in Slides on Sphinxxx1984 Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ch-Hans</language>
    <copyright>@2020, Xinyu Ye. All rights reserved.</copyright>
    <lastBuildDate>Sat, 24 Oct 2020 22:00:00 +0800</lastBuildDate>
    
	<atom:link href="https://sphinxxx1984.github.io/slides/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>咖啡冲煮教学</title>
      <link>https://sphinxxx1984.github.io/slides/pour-over_coffee/</link>
      <pubDate>Sat, 24 Oct 2020 22:00:00 +0800</pubDate>
      
      <guid>https://sphinxxx1984.github.io/slides/pour-over_coffee/</guid>
      <description>咖啡的品饮 &amp;ndash;
风味是一个笼统的概念，它实际上包括挥发性的香气、水溶性的味道和触感
&amp;ndash;
 香气：鼻前嗅觉（鼻子嗅闻）/鼻前嗅觉（通过口腔进入鼻腔）  &amp;ndash;
 水溶性的味道：酸、甜、苦共同作用  &amp;ndash;
 触感：厚薄度（Body），清爽还是浓稠  &amp;ndash;
嗅觉和味觉会共同作用
&amp;ndash;
香气、味道、触感共同构成了一种整体印象，我们把它称之为“风味”，通常用与之有关联/类似的东西来描述
 如何描述风味 &amp;ndash;
一般使用咖啡风味轮
&amp;ndash;
但是原版咖啡风味轮太复杂了，不适合初学者参考
&amp;ndash;
 几个主要的方向：花、水果、草本、坚果、焦糖、巧克力、辛香  &amp;ndash;
今天可能会使用到的风味词汇  花香、蜂蜜甜感、焦糖甜感、柑橘、莓果、热带水果、酒韵  &amp;ndash;
咖啡的品饮要求饮者平时多去使用味觉和嗅觉，获得各种各样的体验，才能在喝咖啡时产生相应的词汇联想
 咖啡冲煮的框架与思路 &amp;ndash;
咖啡萃取的目标：尽可能多地从咖啡豆中萃取正面的风味物质，同时不萃取过多的负面风味物质
&amp;ndash;
 总体来说，正面的物质萃取速率较快，负面的物质萃取速率较慢  &amp;ndash;
 所以萃取的时间要适宜，不宜过长（过萃），也不宜过短（萃取不足）  &amp;ndash;
咖啡冲煮中的变量：
&amp;ndash;
 水温  &amp;ndash;
 研磨度  &amp;ndash;
 滤杯  &amp;ndash;
 注水方式（空间分布、速率）  &amp;ndash;
 咖啡冲煮的一般流程 &amp;ndash;</description>
    </item>
    
    <item>
      <title>邮件自动分类与数据挖掘</title>
      <link>https://sphinxxx1984.github.io/slides/text_mining/</link>
      <pubDate>Mon, 14 Sep 2020 07:44:00 +0800</pubDate>
      
      <guid>https://sphinxxx1984.github.io/slides/text_mining/</guid>
      <description>PART ONE 背景分析 邮件分类问题属于文本类的数据挖掘。所谓文本分类，是指对所给出的文本，给出预定义的一个或多个类别标号，对文本进行准确、高效的分类。在本任务中，文本的类别有20种。
一般来说，传统的文本分类过程由以下几个步骤组成：数据预处理、文本特征选择、特征降维、训练分类器和分类性能评估。
 PART TWO 实现思路 STEP1 数据预处理 STEP2 文本特征提取 我们计算单词TF-IDF值的方式来表示一个邮件的文本特征。 而在计算文本TF和IDF的过程中，同时对数据进行处理，筛掉一部分不需要的单词。
共使用了5个job来实现，分别是：
1.计算单词的TF值
2.计算单词的IDF值
3.计算单词的TF-IDF值并生成稀疏向量（&amp;lt;单词索引 单词TF-IDF值&amp;gt;）
4.输出IDF表中的单词和索引（用于查找配对）
5.将3中的稀疏向量的TF-IDF值替换为1并输出（用于朴素贝叶斯）
定义了一个数据结构KeyWord用来记录文件名，文件夹名（类别标记），单词。
 1.TfJob 计算单词的TF值 输入：停词表 数据集
输出：filename,word,dictName TF
Mapper
在setup中加载停词表（通过addCacheFile的方式加载）
Map过程如下：
(1) 去除掉分隔符
(2) 通过StandardAnalyzer分词器进行分词
(3) 将分好的单词再次筛选，去除单个字母和带数字的单词
(4) 每个KeyWord词频为1，输出
在cleanup中输出&amp;lt;__wordNum__, 单词总数&amp;gt;
 1.TfJob 计算单词的TF值 Combiner
(1) 将Mapper中输出的&amp;lt;KeyWord, 1&amp;gt;进行求和
(2) 输出&amp;lt;KeyWord, 总次数&amp;gt;
Reducer
文档可能超过split尺寸大小，被拆分在多个split被多个Map统计单词数。
Reduce过程如下：
(1) 对各个Map统计的单词总数进行汇总
(2) 使用公式计算单词的TF值，按格式输出
 2.IdfJob 计算单词的IDF值 输入：job1的结果
输出：word IDF
通过上一个job的输出统计每个单词出现的文档数
通过hadoop.hdfs的API获得输入文档的总数
从而利用公式计算IDF
 2.</description>
    </item>
    
  </channel>
</rss>